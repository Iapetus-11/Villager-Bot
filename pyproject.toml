[tool.poetry]
name = "Villager-Bot"
version = "0.0.1"
description = ""
authors = ["Milo Weinberg <iapetus011@gmail.com>"]
license = "MIT"
packages = [
    { include = "bot" },
    { include = "common" },
    { include = "karen" },
    { include = "scripts" },
]

[tool.poetry.dependencies]
python = "^3.10"
asyncpg = "^0.26.0"
aiofiles = "^23.1.0"
aiohttp = "^3.9.5"
arrow = "^1.3.0"
async-cse = "^0.3.0"
aio-mc-rcon = "^3.0.2"
cryptography = "^42.0.7"
Cython = "^0.29.33"
numpy = "^1.20.3"
opencv-python = "^4.5.2"
imageio = "^2.9.0"
Pillow = "^10.3.0"
psutil = "^5.9.4"
moviepy = "^1.0.3"
pydantic = "^1.10.5"
websockets = "^12.0"
classy-json = "^3.2.1"
python-dotenv = "^1.0.0"
"discord.py" = "^2.3.2"
colorlog = "^6.6.0"
captcha = "^0.5.0"
minecraftstatus = "^0.0.9"

[tool.poetry.group.dev.dependencies]
mypy = "^0.981"
asyncpg-stubs = "^0.26.2"
types-psutil = "^5.9.3"
pytest = "^7.1.3"
types-aiofiles = "^22.1.0.9"
ruff = "^0.4.6"

[tool.poetry.scripts]
check_text = { callable = "scripts:check_text" }
format_and_lint = { callable = "scripts:format_and_lint" }
generate_blockify_data = { callable = "scripts:generate_blockify_data" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
preview = true
line-length = 100
indent-width = 4

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules
extend-select = [
    "F",
    "W",
    "E",
    "COM818",
    "COM819",
    "D300",
    "UP003",
    "UP004",
    "UP006",
    "UP007",
    "UP010",
    "UP032",
    "UP038",
    "B006",
    "B007",
    "B014",
    "B015",
    "B016",
    "B018",
    "B021",
    "B022",
    "B032",
    "B033",
    "DTZ001",
    "DTZ003",
    "G010",
    "G201",
    "PIE790",
    "PIE794",
    "PIE796",
    "T201",
    "PT013",
    "PT014",
    "Q000",
    "Q002",
    "Q003",
    "Q004",
    "RET501",
    "RET502",
    "RET503",
    "RET504",
    "RET505",
    "RET506",
    "RET507",
    "RET508",
    "SIM101",
    "SIM102",
    "SIM103",
    "SIM115",
    "SIM117",
    "SIM118",
    "SIM201",
    "SIM202",
    "SIM208",
    "SIM210",
    "SIM211",
    "SIM212",
    "SIM300",
    "SIM910",
    "TD004",
    "TD005",
    "TD006",
    "TD007",
    "PLE0604",
    "PLE0605",
    "PLE0704",
    "PLE1205",
    "PLE1206",
]
extend-per-file-ignores = { "__init__.py" = ["F401", "F403"] }

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.format]
quote-style = "double"
line-ending = "lf"
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
sections = { bot = ["bot"], karen = ["karen"], common = ["common"] }
section-order = ["future", "standard-library", "third-party", "common", "bot", "karen", "first-party", "local-folder"]

[tool.mypy]
plugins = ["pydantic.mypy"]
files = ["common/**/*.py", "karen/**/*.py", "scripts/**/*.py"]
python_version = "3.10"
warn_unused_configs = true
namespace_packages = true
explicit_package_bases = true

[tool.pytest.ini_options]
pythonpath = ["."]

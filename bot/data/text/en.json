{
  "en": {
    "lang": "en",
    "name": "English",
    "misc": {
      "pingpong": "The prefix for this server is `{0}` and the help command is `{0}help`\nIf you are in need of more help, you can join the **[Support Server]({1})**.",
      "cooldown_msgs": [
        "Didn't your parents tell you that [patience is a virtue](http://www.patience-is-a-virtue.org/)? Calm down and wait another **{}**.",
        "Hey, you need to wait another **{}** before doing that again.",
        "Hrmmm, looks like you need to wait another **{}** before doing that again.",
        "Don't you know that [patience is a virtue](http://www.patience-is-a-virtue.org/)! Wait another **{}**.",
        "Hold on and wait another **{}**."
      ],
      "errors": {
        "andioop": "Oops! Something went really wrong... Please take a screenshot and report it on the **[Support Server]({})**, thank you!",
        "private": "This command can't be used in private chat channels.",
        "user_perms": "Nice try stupid, but you don't have the permissions to do that!",
        "bot_perms": "You didn't give me the proper permissions to do that, dummy.",
        "concurrency": "Hold on! You're using this command tooooo fast!",
        "missing_arg": "Looks like you're forgetting to put something in!",
        "bad_arg": "Looks like you didn't type something correctly, try typing it right the first time, dum dum.",
        "not_ready": "Hold on! Villager Bot is still starting up!",
        "nrn_buddy": "Hold on, you can't use that command right now!",
        "disabled": "This command is disabled in this server and can not be used!"
      },
      "tips": [
        "Got a suggestion? Found a bug? Need help? Want to trade? Join the Support Server! https://discord.gg/39DwwUV",
        "In need of emeralds? Vote for us on top.gg! https://top.gg/bot/639498607632056321",
        "Broke because of those pillagers? Vote for us to get emeralds! https://top.gg/bot/639498607632056321",
        "Check out the `rules` command to see the Villager Bot rules!",
        "Do you own a Minecraft server or are you looking for one? Check out https://minecraft.global/"
      ],
      "tip_intros": [
        "**PRO TIP:**",
        "**How to become god gamer tip #1:**",
        "**Handy Dandy Tip:**",
        "**Pro Tip #1:**"
      ],
      "time": {
        "day": "day",
        "days": "days",
        "hour": "hour",
        "hours": "hours",
        "minute": "minute",
        "minutes": "minutes",
        "second": "second",
        "seconds": "seconds"
      },
      "intro": {
        "body": [
          "Hey y'all! Type `{prefix}help` to get started with Villager Bot!",
          "If you need any more help, check out the **[Support Server]({support_server})**!\n",
          "*Our privacy policy can be found [here]({privacy_policy}).*"
        ],
        "footer": "Made by Iapetus11 and others ({prefix}credits)  |  Check the {prefix}rules"
      }
    },
    "help": {
      "n": {
        "title": "Villager Bot Commands",
        "economy": "Economy",
        "minecraft": "Minecraft",
        "utility": "Utility",
        "fun": "Fun",
        "admin": "Admin",
        "cmd": "Command Usage"
      },
      "main": {
        "desc": "Need more help? Check out the **[Support Server]({})**!\nEnjoying the bot? Vote for us on **[top.gg]({})** and earn emeralds!",
        "support": "Support",
        "clickme": "Click Me",
        "howto": "Do `{0}help <command>` to see how to use that command!",
        "nodoc": "No documentation exists for that command.",
        "aliases": "Aliases: `{}`"
      },
      "econ": {
        "profile": "`{0}profile [optional: user]` *shows the profile of you or the specified user*",
        "balance": "`{0}balance [optional: user]` *shows the balance of you or the specified user*",
        "inventory": "`{0}inventory [optional: category] [optional: user]` *shows the inventory of you or the specified user; optional categories include `tools`, `magic`, `fish`, or `misc`*",
        "deposit": "`{0}deposit <emerald blocks>` *deposit emeralds into the vault*",
        "withdraw": "`{0}withdraw <emerald blocks>` *withdraw emeralds from the vault*",
        "give": "`{0}give <user> <amount> <item>` *give another user an item or emeralds*",
        "mine": "`{0}mine` *mine for emeralds*",
        "fish": "`{0}fish` *fish for fish and items*",
        "fishmarket": "`{0}fishmarket` *view the current selling prices of fish*",
        "farm": "`{0}farm` *plant and harvest crops worth emeralds*",
        "trash": "`{0}trash` *view the useless items you mine up*",
        "search": "`{0}search` *search for emeralds*",
        "honey": "`{0}honey` *harvest honey from the bees you own*",
        "gamble": "`{0}gamble <emeralds>` *gamble with the bot for a chance of winning emeralds*",
        "pillage": "`{0}pillage <user>` *pillage emeralds from another user*",
        "use": "`{0}use <item>` *use the specified item*",
        "shop": "`{0}shop` *shows the Villager Shop*",
        "buy": "`{0}buy [optional: amount of item] <item>` *buy an item from the Villager Shop*",
        "sell": "`{0}sell <amount> <item>` *sell items back to Villager Bot*",
        "leaderboards": "`{0}leaderboards` *shows the leaderboards*",
        "trivia": "`{0}trivia` *sends trivia questions you can answer for emeralds!*"
      },
      "mc": {
        "mcstatus": "`{0}mcstatus [optional: server]` *checks the status of any type of Minecraft server*",
        "rcon": "`{0}rcon <command>` *executes commands on a Minecraft server from Discord*",
        "randommc": "`{0}randommc` *shows a random Minecraft server if you want a new place to explore*",
        "blockify": "`{0}blockify` *turns whatever image you upload into Minecraft blocks / pixel art*",
        "stealskin": "`{0}stealskin <username>` *fetches the skin of a Minecraft Java Edition player*",
        "buildidea": "`{0}buildidea` *sends a random build idea for if you're bored and need inspiration*",
        "mccolors": "`{0}mccolors` *shows the Minecraft colors and how to use them in the ingame chat*",
        "mcprofile": "`{0}mcprofile <username>` *shows information on a Minecraft Java Edition player*",
        "nametoxuid": "`{0}nametoxuid <username>` *turns a MC Bedrock Edition gamertag into an xuid*"
      },
      "util": {
        "help": "`{0}help` *view helpful information about Villager Bot*",
        "rules": "`{0}rules` *view the rules of using the bot*",
        "config": "`{0}config` *configure / setup the bot to your liking*",
        "ping": "`{0}ping` *shows the latency between Discord and Villager Bot*",
        "serverinfo": "`{0}server` *view information about the current server*",
        "avatar": "`{0}avatar` *shows the enlarged avatar of the specified user*",
        "links": "`{0}links` *view useful links relating to Villager Bot*",
        "vote": "`{0}vote` *earn emeralds from voting for Villager Bot on certain websites*",
        "stats": "`{0}stats` *shows statistics about Villager Bot*",
        "google": "`{0}google <search>` *searches on google for your query*",
        "youtube": "`{0}youtube <search>` *searches on youtube for your query*",
        "image": "`{0}image <search>` *searches google images for your query*",
        "math": "`{0}math <problem>` *solves a math problem",
        "credits": "`{0}credits` *shows who helped make Villager Bot*",
        "snipe": "`{0}snipe` *shows the latest deleted message in the current channel*",
        "redditdl": "`{0}redditdl <reddit post url>` *downloads the specified media from Reddit*",
        "exif": "`{0}exif` *extracts EXIF data from the specified image*",
        "imagetopng": "`{0}imagetopng *converts the uploaded/specified image to a png*",
        "translate": "`{0}translate <target> [text]` *translates the given text or message to the specified target language*",
        "reminders": "`{0}reminders` `add` *or* `remove` *to add or remove a reminder respectively*"
      },
      "fun": {
        "cursed": "`{0}cursed` *sends a random cursed Minecraft image*",
        "meme": "`{0}meme` *sends a random meme from reddit*",
        "4chan": "`{0}4chan` *shows a funny screenshot from 4chan*",
        "comic": "`{0}comic` *sends a random comic from r/comics on reddit*",
        "say": "`{0}say <text>` *makes the bot say the text you put in*",
        "enchant": "`{0}enchant <text>` *turns text into the Minecraft enchantment table language*",
        "unenchant": "`{0}unenchant <text>` *turns the enchantment table language back into text*",
        "villagerspeak": "`{0}villagerspeak <text>` *turns text into villager sounds*",
        "clap": "`{0}clap <text>` *:clap: puts :clap: the :clap: emoji :clap: between :clap: text :clap:*",
        "emojify": "`{0}emojify <text>` *turns text into emojis*",
        "sarcastic": "`{0}sarcastic <text>` *tUrN tExT iNtO tHe SpOnGeBoB sArCaStIc TeXt*",
        "owo": "`{0}owo <text>` *owofies the given text uwu*",
        "vaporwave": "`{0}vaporwave <text>` *makes text into the vaporwave style*",
        "kill": "`{0}kill <user>` *brutally murder another user*",
        "bubblewrap": "`{0}bubblewrap` *sends virtual bubblewrap for you to pop*",
        "coinflip": "`{0}coinflip` *flips a coin and says the result in the chat*",
        "pat": "`{0}pat <user>` *brutally pat someone on the head*",
        "slap": "`{0}slap <user>` *gently slap someone*",
        "achievement": "`{0}achievement <text>` *generates a Minecraft achievement from the given text*",
        "splashtext": "`{0}splashtext <text>` *generates a Minecraft splash screen with the given text*",
        "trivia": "`{0}trivia` *sends trivia questions you can answer for emeralds!*",
        "gayrate": "`{0}gayrate <user>` *tells how gay the user is*"
      },
      "mod": {
        "warn": "`{0}warn <user> [optional: reason]` *warn a user for a specified reason*",
        "warns": "`{0}warns <user>` *view the warns a user has, leave blank to see your warnings*",
        "purge": "`{0}purge <amount>` *purge messages from the current channel*",
        "delwarns": "`{0}delwarns <user>` *clears the warns that user has in this server*",
        "kick": "`{0}kick <user> [optional: reason]` *kicks the user from the current Discord server*",
        "ban": "`{0}ban <user> [optional: delete message days] [optional: reason]` *bans the user from the current Discord server*",
        "pardon": "`{0}pardon <user>` *unban the user from the current Discord server*",
        "mute": "`{0}mute <user> [time] [reason]` *mutes the user in the current Discord server*",
        "unmute": "`{0}unmute <user>` *unmutes the user in the current Discord server*"
      }
    },
    "fun": {
      "too_long": "That message would be too long to convert.",
      "dl_img": "**[[Download Image]]({})**",
      "bubblewrap": {
        "invalid_size_1": "That is not a valid size. Example of a valid size: `10x10`",
        "invalid_size_2": "The size must be between 1 and 12"
      },
      "gayrate": "{0} {1} is 100% gay {0}",
      "trivia": {
        "title": "{}  Minecraft Trivia **[{}]** {}",
        "title_basic": "{}  Minecraft Trivia {}",
        "time_to_answer": "You have 15 seconds to answer this question!",
        "timeout": "**Sucks to suck...** You ran out of time!",
        "correct": [
          "Nice job, that was **correct**!\nYou've been awarded {}{}!",
          "Nice job, that was **correct**!\nYou've earned {}{}!",
          "Good job, that was **correct**!\nYou've received {}{}!",
          "Nice, that was **correct**!\nYou've earned {}{}!",
          "Nice, that was **correct**!\nYou've been awarded {}{}!"
        ],
        "incorrect": [
          "That was **incorrect**...  :pensive:",
          "You may be **stupid**... :pensive:",
          "There's no hope for you... :pensive:",
          "Yeah doctor he basically has no brain..."
        ],
        "difficulty": [
          "easy",
          "medium",
          "hard"
        ],
        "questions": [
          {
            "d": 2,
            "tf": false,
            "q": "How much health does the Ender Dragon have?",
            "a": [
              "200 hp",
              "500 hp",
              "50 hp",
              "100 hp"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "How many slices does a Minecraft cake have?",
            "a": [
              "7 slices",
              "8 slices",
              "6 slices",
              "10 slices"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "How much hunger does a potato restore?",
            "a": [
              "1 hunger",
              "2 hunger",
              "0 hunger",
              "3 hunger"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "How much hunger saturation does a potato restore?",
            "a": [
              "0.6 saturation",
              "1 saturation",
              "0.1 saturation",
              "1.7 saturation"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What food restores the most hunger in Minecraft?",
            "a": [
              "steak",
              "bread",
              "mushroom stew",
              "golden carrot"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "How much XP does a villager need to get from Novice to Master rank?",
            "a": [
              "250 XP",
              "150 XP",
              "100 XP",
              "70 XP"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What's the rarest biome in Minecraft?",
            "a": [
              "Modified Jungle Edge",
              "Snowy Taiga Mountains",
              "Bamboo Jungle Hill",
              "Mushroom Field Shore"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What year was Minecraft fully released?",
            "a": [
              "2011",
              "2007",
              "2010",
              "2014"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What mob are creepers scared of?",
            "a": [
              "ocelots",
              "zombies",
              "the player",
              "other creepers"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "In what snapshot were elytra added to the game?",
            "a": [
              "15w41a",
              "16w31a",
              "16w42a",
              "17w22a"
            ]
          },
          {
            "d": 0,
            "tf": false,
            "q": "What does the skeleton use to attack?",
            "a": [
              "bow",
              "egg",
              "sword",
              "nothing"
            ]
          },
          {
            "d": 0,
            "tf": false,
            "q": "What does the wither skeleton use to attack?",
            "a": [
              "sword",
              "bow",
              "wither skull",
              "their hands"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "How far away is the world border from 0 0?",
            "a": [
              "30000000 blocks in each direction",
              "1000000 blocks in each direction",
              "300000000 blocks in each direction",
              "There is no border, Minecraft is infinite"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "In which trade slot does the shepherd villager sell beds?",
            "a": [
              "6th",
              "2nd",
              "4rd",
              "8th"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What tool is sold by both the toolsmith and weaponsmith villagers?",
            "a": [
              "axe",
              "shovel",
              "sword",
              "pickaxe"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "Which item can you use to make a night vision potion?",
            "a": [
              "golden carrot",
              "golden apple",
              "rotten flesh",
              "beetroot"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "How long does one Minecraft in-game day last?",
            "a": [
              "20 minutes",
              "10 minutes",
              "30 minutes",
              "1 hour"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "Who originally created Minecraft?",
            "a": [
              "Markus Perrson",
              "Matthew Marcusson",
              "Donald Donnelly",
              "Magnus Carlson"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: a shovel can be used to extinguish a campfire",
            "a": [
              "true",
              "false"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "Which mob can fly through bedrock?",
            "a": [
              "vex",
              "bee",
              "wither skeleton",
              "bat"
            ]
          },
          {
            "d": 2,
            "tf": true,
            "q": "**true** or **false**: an iron hoe has more durability than a golden hoe",
            "a": [
              "true",
              "false"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: Minecraft zombies can break down doors",
            "a": [
              "true",
              "false"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: Minecraft skeletons can break down doors",
            "a": [
              "false",
              "true"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What was the first enemy introduced into Minecraft?",
            "a": [
              "zombie",
              "creeper",
              "skeleton",
              "spider"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Which hostile mob was added in the Pretty Scary Update?",
            "a": [
              "witch",
              "creeper",
              "enderman",
              "vex"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Which enemy was introduced in Minecraft 1.8?",
            "a": [
              "silverfish",
              "wither",
              "spider",
              "zombie pigman"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "In which snapshot was the Zombie Pigman renamed to the Zombified Piglin?",
            "a": [
              "20w09a",
              "13w49a",
              "18w43a",
              "12w37a"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What's the ingredient used to make lingering potions?",
            "a": [
              "dragon's breath",
              "gunpowder",
              "redstone",
              "glowstone"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What year did development on Minecraft begin?",
            "a": [
              "2009",
              "2010",
              "2011",
              "2008"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "In what programming language is the PC version of Minecraft written in?",
            "a": [
              "Java",
              "Python",
              "C++",
              "BASIC"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "How many minutes does it take for a baby villager to grow up?",
            "a": [
              "20 minutes",
              "10 minutes",
              "40 minutes",
              "15 minutes"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "How many different colors of dye are there?",
            "a": [
              "16 colors",
              "14 colors",
              "18 colors",
              "20 colors"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What enchantment has the same max level as Sharpness?",
            "a": [
              "smite",
              "unbreaking",
              "feather falling",
              "blast protection"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What's the Ender Dragon's name?",
            "a": [
              "Jean?",
              "Carson",
              "Bertha!",
              "Steve"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Why did polar bears get added to Minecraft?",
            "a": [
              "Jeb's wife liked polar bears so he added it",
              "the community chose it on Minecon live",
              "Notch added it as a secret friday update",
              "the community voted for it on Twitter"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What language do Enderman speak?",
            "a": [
              "inverted English",
              "just gibberish",
              "swedish",
              "inverted german"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What's the most common flower in the swamp biome?",
            "a": [
              "blue orchid",
              "dandelion",
              "wither rose",
              "sunflower"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Why was the black and white cat added to the game?",
            "a": [
              "Jeb's cat died and it looked that way",
              "Notch liked the way it looked",
              "they googled random cat images and found that one",
              "it was a random design"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "How is the \"How did we get here?\" achievement obtained?",
            "a": [
              "having all effects applied at once",
              "having all potion effects applied at once",
              "by going to an end city",
              "by finding the farlands"
            ]
          },
          {
            "d": 0,
            "tf": false,
            "q": "**true** or **false**: piglins only attack when you hit them",
            "a": [
              "false",
              "true"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "Giving a sheep what nametag will make them become rainbow?",
            "a": [
              "jeb_",
              "Dinnerbone",
              "Johnny",
              "Toast"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What was the creeper supposed to be originally?",
            "a": [
              "pig",
              "zombie",
              "spider",
              "chicken"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: the Ender Dragon can only lay multiple eggs",
            "a": [
              "false",
              "true"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Which update was also known as \"The Pretty Scary Update\"?",
            "a": [
              "1.4.2",
              "1.3",
              "1.12",
              "1.7"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "Which nametag will turn a mob upside-down?",
            "a": [
              "Dinnerbone",
              "jeb_",
              "Johnny",
              "Toast"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What three items are required to get an active conduit?",
            "a": [
              "heart of the sea, nautilus shell, any type of prismarine",
              "heart of the sea, beacon, any type of prismarine",
              "heart of the sea, nautilus shell, glass",
              "diamonds, bautilus shell, glass"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What is the base increase for melee damage when the strength effect is applied?",
            "a": [
              "3 HP",
              "1½ HP",
              "2 HP",
              "4 HP"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "All Minecraft cows are...",
            "a": [
              "female",
              "male"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What is the maximum number of melon slices a melon can drop?",
            "a": [
              "9 slices",
              "8 slices",
              "7 slices",
              "6 slices"
            ]
          },
          {
            "d": 0,
            "tf": false,
            "q": "How much wool do you need to make a bed in Minecraft?",
            "a": [
              "3 wool",
              "4 wool",
              "2 wool",
              "1 wool"
            ]
          },
          {
            "d": 0,
            "tf": false,
            "q": "What item do slimes drop in Minecraft?",
            "a": [
              "slime balls",
              "slime jars",
              "kinetic sand",
              "magma cream"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What is the name of the mob that drops magma cream?",
            "a": [
              "magma cube",
              "lava slime",
              "molten cube",
              "molten slime"
            ]
          },
          {
            "d": 0,
            "tf": false,
            "q": "What is the name of the mob that drops gunpowder?",
            "a": [
              "creeper",
              "zombie",
              "wither",
              "magma cube"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: in Minecraft, fish can drop bones",
            "a": [
              "true",
              "false"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What is the rarest type of axolotl?",
            "a": [
              "blue",
              "red",
              "tropical",
              "pink"
            ]
          },
          {
            "d": 2,
            "tf": true,
            "q": "**true** or **false**: in Minecraft, axolotls can only spawn in absolute darkness",
            "a": [
              "true",
              "false"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Which of the following is actually a type of axolotl in Minecraft?",
            "a": [
              "leucistic",
              "muddy",
              "white",
              "purpur"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "How do you breed axolotls in Minecraft?",
            "a": [
              "bucket of tropical fish",
              "bucket of water",
              "only salmon",
              "any type of fish"
            ]
          },
          {
            "d": 0,
            "tf": false,
            "q": "How do you breed cows in Minecraft?",
            "a": [
              "wheat",
              "carrots",
              "seeds",
              "milk bucket"
            ]
          },
          {
            "d": 0,
            "tf": false,
            "q": "How do you breed sheep in Minecraft?",
            "a": [
              "wheat",
              "carrots",
              "seeds",
              "mushroom soup"
            ]
          },
          {
            "d": 0,
            "tf": false,
            "q": "How do you breed chickens in Minecraft?",
            "a": [
              "seeds",
              "carrots",
              "wheat",
              "milk bucket"
            ]
          },
          {
            "d": 0,
            "tf": false,
            "q": "How do you breed pigs in Minecraft?",
            "a": [
              "potatoes",
              "apple",
              "seeds",
              "wheat"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: you can milk mushroom stew from mooshrooms",
            "a": [
              "true",
              "false"
            ]
          },
          {
            "d": 0,
            "tf": true,
            "q": "**true** or **false**: you can milk mushroom stew from cows with a bowl",
            "a": [
              "false",
              "true"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: the Minecraft bedrock edition is coded in the Java programming language",
            "a": [
              "false",
              "true"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What programming language is Minecraft Bedrock Edition coded in?",
            "a": [
              "c++",
              "c",
              "c#",
              "java"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What's the world format for Minecraft Bedrock Edition called?",
            "a": [
              "LevelDB",
              "SQL",
              "Anvil",
              "MCA"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What's the world format for Minecraft Java Edition called?",
            "a": [
              "Anvil",
              "SQL",
              "LevelDB",
              "MCA"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "How big in blocks is a cubic chunk in Minecraft?",
            "a": [
              "16x16x16",
              "32x32x32",
              "64x64x64",
              "128x128x128"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "How big in chunks is a region in Minecraft?",
            "a": [
              "32x32",
              "64x64",
              "16x16",
              "96x96"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: the text in the enchantment table is just gibberish",
            "a": [
              "true",
              "false"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What can you wear to stop enderman from attacking you if you look at their eyes?",
            "a": [
              "pumpkin",
              "potato",
              "melon",
              "wither skull"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "How is a charged creeper created?",
            "a": [
              "It's struck by lightning",
              "It's crafted with a nether star",
              "It gets hit by a flying wither skull",
              "It's spawned in with the debug stick"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What animal was recorded to make the sound effects for the ghast?",
            "a": [
              "a sleeping cat",
              "a barking dog",
              "a parrot",
              "a growling dog"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What's the maximum power level for redstone dust?",
            "a": [
              "15",
              "16",
              "12",
              "8"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What calms bees down in Minecraft?",
            "a": [
              "campfire smoke",
              "honey bottles",
              "water",
              "slime balls"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: Minecraft bees can swim underwater",
            "a": [
              "false",
              "true"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What debuff do elder guardians inflict in Minecraft?",
            "a": [
              "mining fatigue",
              "slowness",
              "instant damage",
              "poison"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "How do you turn a villager into a witch?",
            "a": [
              "strike the villager with lightning",
              "dip the villager in lava",
              "have a zombie bite the villager",
              "burn the villager"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: iron golems can drop poppies when they die",
            "a": [
              "true",
              "false"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "How many hearts does the iron golem have?",
            "a": [
              "50 hearts",
              "100 hearts",
              "25 hearts",
              "200 hearts"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: you can heal iron golems with iron ingots",
            "a": [
              "true",
              "false"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What's the rarest type of village to spawn?",
            "a": [
              "snowy",
              "desert",
              "jungle",
              "beach"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: you can silk touch mob spawners",
            "a": [
              "false",
              "true"
            ]
          },
          {
            "d": 0,
            "tf": true,
            "q": "**true** or **false**: the diamond arrow is in Minecraft",
            "a": [
              "false",
              "true"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What version of Minecraft added the end?",
            "a": [
              "1.0.0",
              "1.2.0",
              "1.12.0",
              "1.9.0"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What game inspired the creation of Minecraft?",
            "a": [
              "infiniminer",
              "tetris",
              "roblox",
              "fortnite"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Who wrote the original music for Minecraft?",
            "a": [
              "c418",
              "notch",
              "jeb",
              "lena raine"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Who wrote the music for the 1.16 nether update?",
            "a": [
              "lena raine",
              "notch",
              "jeb",
              "c418"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Which Minecraft block existed before Minecraft?",
            "a": [
              "cobblestone",
              "dirt",
              "stone",
              "wood"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What game was Notch working on before Minecraft?",
            "a": [
              "RubyDung",
              "Infiniminer",
              "Tetris 2.0",
              "Roblox"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "What's the best y level to mine at for diamonds?",
            "a": [
              "y=12",
              "y=16",
              "y=3",
              "y=20"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What's the rarest ore in Minecraft?",
            "a": [
              "emerald ore",
              "ancient debris",
              "diamond ore",
              "coal ore"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Which biome is emerald ore found in?",
            "a": [
              "mountains biome",
              "jungle biome",
              "desert biome",
              "badlands biome"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Which biome is gold ore found most in?",
            "a": [
              "badlands biome",
              "jungle biome",
              "desert biome",
              "beach biome"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "Where do normal skeletons spawn in the Nether?",
            "a": [
              "soul sand valley biome",
              "nether wastes biome",
              "basalt delta biome",
              "warped forest biome"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: you can trade with hoglins",
            "a": [
              "false",
              "true"
            ]
          },
          {
            "d": 1,
            "tf": true,
            "q": "**true** or **false**: you can trade with piglins",
            "a": [
              "true",
              "false"
            ]
          },
          {
            "d": 1,
            "tf": false,
            "q": "How do you avoid piglins attacking you?",
            "a": [
              "by wearing golden armor",
              "by killing them",
              "by wearing soul strider boots",
              "by wearing warding III armor"
            ]
          },
          {
            "d": 2,
            "tf": false,
            "q": "What item do you breed hoglins with?",
            "a": [
              "crimson fungi",
              "warped fungi",
              "nether wart",
              "porkchops"
            ]
          }
        ]
      }
    },
    "mobs_mech": {
      "no_health": "You don't have enough health to fight this mob.",
      "type_engage": "Type `fight` to fight the mob!",
      "attack_or_flee": "Type `attack` to attack, or `flee` to run away.",
      "flee_insults": [
        "Fine, run away like a little baby.",
        "Fine, run to mommy like a little baby.",
        "Go to mommy little baby.",
        "Ok little baby, run away to mommy.",
        "Fine, run away like the crybaby toddler you are."
      ],
      "user_attacks": [
        "You slashed the **{0}** with your **{1}**!",
        "Your **{1}** stabbed deep into the **{0}**!",
        "You hacked at the **{0}** with your **{1}**!",
        "You swung your **{1}** at the **{0}**!",
        "You poked the **{0}** with your **{1}**!",
        "You poked your **{1}** deep into the **{0}**!",
        "You hacked pieces off the **{0}** with your **{1}**!",
        "You poked the **{0}** in the eye with your **{1}**!",
        "You lunged at the **{0}** and stabbed it with your **{1}**!",
        "You charged at the **{0}** and hacked at it with your **{1}**!",
        "You charged at the **{0}** and stabbed it with your **{1}**!",
        "You charged at the **{0}** and hacked at it with your **{1}**!",
        "You charged at the **{0}** and with all your might poked it with your **{1}**!"
      ],
      "user_finishers": [
        "You swung the **{1}** as hard as you could and decapitated the **{0}**!",
        "You tripped and let go of your **{1}**, landing it in the **{0}** and killing it!",
        "You, with all your might, buried the **{1}** deep into the chest of the **{0}**!",
        "Slashing your **{1}** one last time, you banished the **{0}** from existence!",
        "Swinging your **{1}** one last time, you slashed the **{0}** in half!",
        "With one last hack from your **{1}**, you cut the **{0}** in half!",
        "With one last swing from your **{1}**, you banished the **{0}** from this world!",
        "You hacked at the **{0}** with all your might, and decapitated it with your **{1}**!",
        "With the last of your strength, you buried the **{1}** deep into the chest of the **{0}**!",
        "Landing the **{1}** on the neck of the **{0}**, it finally died!",
        "With the last of your strength, your **{1}** rips through the **{0}**!",
        "With the last of your strength, your **{1}** tears through the **{0}**!",
        "You hacked with the **{1}** as hard as you could, and decapitated the **{0}**!",
        "Missing the **{0}** with your sword, it died from disappointment..."
      ],
      "mob_drops": [
        "A wild {0} has found you!",
        "A vicious {0} has seen you!",
        "A lurking {0} has seen you!",
        "A lurking {0} has found you!",
        "A creepy {0} has seen you!",
        "A creepy {0} has found you!",
        "You have been found by a wild {0}!",
        "You have been seen by a vicious {0}!",
        "You have been found by a crazy {0}!",
        "A crazy {0} has seen you!",
        "You ran into a wild {0}!",
        "You ran into a crazy {0}!",
        "You ran into a {0}!",
        "You ran into a creepy {0}!",
        "You ran into a vicious {0}!"
      ],
      "found": [
        "Wow look at that! You found {}{} just right there on the ground!",
        "Through the white smoke from the slain mob you spot {}{}!",
        "The mob drops {}{}!",
        "You glance at the ground and see {}{}!",
        "You find {}{} next to the fallen mob!"
      ],
      "lost": {
        "creeper": [
          "The **creeper** also blew up {}{} that was yours...",
          "The **creeper** made {}{} that was yours go up in a poof of smoke...",
          "The **creeper** also obliterated {}{} that was yours..."
        ],
        "enderman": [
          "The **enderman** teleported away with {}{} that was yours...",
          "The **enderman** stole {}{} from you and teleported it into the void...",
          "The **enderman** stole {}{} from you and teleported away..."
        ],
        "normal": [
          "The **{}** also stole {}{} that was yours...",
          "The **{}** also got away with {}{} that was yours...",
          "The **{}** stole {}{} off your dead corpse..."
        ]
      },
      "mobs": {
        "zombie": {
          "attacks": [
            "The **zombie** ran, lashing at your arms!",
            "The **zombie** gives you a painful hug!",
            "The **zombie** groans and gives you a painful hug!",
            "The **zombie** punches you in the face!",
            "The **zombie** claws you with its overgrown, decaying nails!",
            "The **zombie** punches you in your face with its decaying hand!",
            "The **zombie** scratches you with its overgrown, decaying nails!"
          ],
          "finishers": [
            "The **zombie** lunges for your throat, and bites!",
            "The **zombie** disembowels you and eats your remains!",
            "The **zombie** guts you and devoures your remains!"
          ]
        },
        "skeleton": {
          "attacks": [
            "The **skeleboi** yeets an arrow at your face!",
            "The **skeleton** turns around and 360 no scopes you!",
            "An arrow rains from the **skeleton**, only one.",
            "One headshot from the **skeleton** for you!",
            "BOOM! HEADSHOT! - **skeleton** 2023"
          ],
          "finishers": [
            "The **skeleton** 360 noscopes you for the last time!",
            "A rain of arrows whistle towards you and turn you into swiss cheese!",
            "You hear the whistle of hundreds of arrows and then you die!",
            "Arrows rain from the sky, piercing your flesh and killing you!"
          ]
        },
        "spider": {
          "attacks": [
            "The **spider** jumps on top of you and sinks its fangs into your arm!",
            "The **spider** knocks you down and bites your leg!",
            "The **spider** jumps at you in an attempt to bite your face off!",
            "The **spider** dunks on you!",
            "The **spider** lunges at you and bites your leg!"
          ],
          "finishers": [
            "The **spider** jumps on you, spins around, and sinks its fangs into your skull!",
            "The **spider** dunks on you one last time, and bites your face off!",
            "The **spider** rips your face off, your last sight being 8 murderous red eyes staring back."
          ]
        },
        "cave_spider": {
          "attacks": [
            "The **cave spider**'s fangs digs deep onto your skin!",
            "The **cave spider** gives you a toxic kiss!",
            "The **cave spider** bites you and inflicts poison damage!"
          ],
          "finishers": [
            "You died a slow, painful death from poison damage!",
            "The **cave spider** injects one last lethal dose of venom!",
            "The **cave spider** buries its fangs deep into you and fills you with venom!"
          ]
        },
        "creeper": {
          "attacks": [
            "You hear a fuse ignite...",
            "The **creeper** flashes and fizzles...",
            "The **creeper** fizzles and flashes...",
            "The **creeper** prepares for its imminent suicide...",
            "From behind you, a fuse ignites..."
          ],
          "finishers": [
            "The **creeper** goes BOOM!",
            "The **creeper** used SELF-DESTRUCT! *It's super effective!*",
            "The **creeper** explodes, yeeting your bloody corpse across the map!",
            "You were blown to pixels by the **creeper**!"
          ]
        },
        "baby_slime": {
          "attacks": [
            "The **baby slime** jumps on you!",
            "The **baby slime** looks cute!",
            "The **baby slime** jumps on your head!",
            "You encourage the **baby slime**!"
          ],
          "finishers": [
            "You die from the cuteness.",
            "The **baby slime** looks so cute you just follow it around for the rest of your life and keep it safe!",
            "You follow the **baby slime** around because it's so cute, it despawns, you die from sadness.",
            "The **baby slime** despawns right in front of you, you die from extreme depression.",
            "The **baby slime** finally does some damage!",
            "You feel bad that the **baby slime** can't hurt you so you commit suicide.",
            "You feel bad that the **baby slime** can't hurt you so you commit dig straight down.",
            "There can only be one winner, the **baby slime** says. You type in `/kill`"
          ],
          "misses": [
            "You swing your **{0}** as hard as you can, you miss the **baby slime**.",
            "You slash your **{0}** at the **baby slime** as hard as you can. The **baby slime** is fine.",
            "You miss, swinging your **{0}** at the **baby slime**.",
            "You swing your **{0}**, the **baby slime** makes a cute face, you miss!"
          ]
        },
        "enderman": {
          "attacks": [
            "The **enderman** picks up a grass block and throws it at you!",
            "The **enderman** picks up a tnt block and throws it at you!",
            "The **enderman** punches you in the face",
            "The **enderman** screams and whacks you in the face with its long arms",
            "The **enderman** teleports behind you and slaps you on the head"
          ],
          "finishers": [
            "The **enderman** teleports you off a cliff",
            "The **enderman** teleports you into the void",
            "The **enderman** teleports behind you and"
          ],
          "misses": [
            "You swing your **{0}** as hard as you can but the **enderman** teleports out of the way.",
            "You swing your **{0}** but the **enderman** teleports out of the way."
          ]
        }
      }
    },
    "minecraft": {
      "invalid_player": "That player is invalid or doesn't exist.",
      "mcimage": {
        "stupid_1": "You have to upload an image in the same message you use the command.",
        "stupid_2": "Please use either the png or jpg image format.",
        "stupid_3": "That is not a valid image."
      },
      "mcping": {
        "shortcut_error": "To use this shortcut, you must set a default Minecraft server to ping via `{}config`",
        "title_offline": "{} no server found at `{}`",
        "title_online": "{} `{}` is online",
        "title_plain": "{} `{}`",
        "latency": "Latency/Ping",
        "version": "Version",
        "field_online_players": {
          "name": "Online Players ({}/{})",
          "value": "Player list is not available for this server."
        },
        "and_other_players": ", and {} others...",
        "learn_more": "You can learn more about this server [here]({}).",
        "powered_by": "Powered by minecraft.global"
      },
      "stealskin": {
        "error": "Oops, something went wrong while fetching that player's skin.",
        "no_skin": "This player doesn't have a skin.",
        "embed_desc": "{}'s skin\n**[[Download]]({})**"
      },
      "mccolors": {
        "embed_desc": "Text in Minecraft can be formatted using different codes and\nthe section (`§`) symbol.",
        "embed_author_name": "Minecraft Formatting Codes",
        "formatting_codes": {
          "red": "Red",
          "yellow": "Yellow",
          "green": "Green",
          "aqua": "Aqua",
          "blue": "Blue",
          "light_purple": "Light Purple",
          "white": "White",
          "gray": "Gray",
          "dark_red": "Dark Red",
          "gold": "Gold",
          "dark_green": "Dark Green",
          "dark_aqua": "Dark Aqua",
          "dark_blue": "Dark Blue",
          "dark_purple": "Dark Purple",
          "dark_gray": "Dark Gray",
          "black": "Black",
          "bold": "Bold",
          "strikethrough": "Strikethrough",
          "underline": "Underline",
          "italic": "Italic",
          "obfuscated": "Obfuscated",
          "reset": "Reset"
        },
        "colors": "Colors",
        "more_colors": "More Colors",
        "formatting": "Formatting"
      },
      "rcon": {
        "stupid_1": "You have to set a Minecraft server for this server via the `{}config mcserver` command first.",
        "dm_error": "I need to be able to DM you to complete the process.",
        "msg_timeout": "I've stopped waiting for a response, run the command again to continue.",
        "port": "Type in the remote console port (rcon.port in the server.properties).",
        "passw": "Type in the remote console password (rcon.password in the server.properties).",
        "stupid_2": "Incorrect password! Run the command to enter it again.",
        "err_con": "Something went wrong while connecting to the server, is the server online and RCON enabled?",
        "err_cmd": "Something went wrong while sending a command to the server, is the server online and RCON enabled?"
      },
      "profile": {
        "error": "Something went wrong while fetching that user's profile...",
        "first": "first username",
        "mcpp": "Minecraft profile for `{}`",
        "skin": "Skin Download",
        "cape": "Cape Download",
        "nocape": "**[Get A Custom Cape](https://discord.gg/ettnFrkNyW)**",
        "hist": "Name History"
      }
    },
    "mod": {
      "no_perms": "Nice try, but you don't have the permissions to do that!",
      "purge": {
        "oop": "Oops... something went wrong..."
      },
      "kick": {
        "stupid_1": "You cannot kick yourself."
      },
      "ban": {
        "stupid_1": "You cannot ban yourself.",
        "stupid_2": "**{}** is already banned.",
        "stupid_3": "Oops, something went wrong while banning that user."
      },
      "unban": {
        "stupid_1": "You cannot unban yourself.",
        "stupid_2": "**{}** isn't banned."
      },
      "warn": {
        "stupid_1": "You cannot warn yourself.",
        "stupid_2": "You cannot clear your own warnings.",
        "thats_too_much_man": "User has too many warnings already.",
        "no_reason": "No reason specified.",
        "by": "Warning by",
        "confirm": "{} Warned {} ({} warning(s) now) for reason: *{}*"
      },
      "mute": {
        "stupid_1": "You cannot mute yourself.",
        "stupid_2": "You used invalid formatting, example: `{0}mute @someone 1w2d3h4m this is the reason` will timeout someone for one week, two days, three hours, and four minutes.",
        "stupid_3": "That's too far in the future!",
        "mute_msg": "**{user}** has been muted for {duration}."
      },
      "unmute": {
        "stupid_1": "You cannot unmute yourself.",
        "stupid_2": "**{}** isn't muted.",
        "unmute_msg": "**{}** has been unmuted."
      }
    },
    "config": {
      "invalid": "That is not a valid option. (Valid options are: {})",
      "main": {
        "title": "Villager Bot Settings",
        "guild_conf": "Server/Guild Configuration",
        "guild_content": [
          "`{0}config prefix <new prefix>` - Change the command prefix in this server.\n\n",
          "`{0}config replies <on/off>` - Change if bot should respond to messages like \"emeralds\".\n\n",
          "`{0}config difficulty <peaceful/easy/hard>` - Changes the difficulty of the game.\n\n",
          "`{0}config lang <language>` - Changes the language of Villager Bot.\n\n",
          "`{0}config mcserver <mcserver>` - Changes the server that is pinged if you don't specify a server in `/mcping`.\n\n",
          "`{0}config togglecmd <cmd>` - Change whether the specified command can be used or not.\n\n"
        ],
        "user_conf": "Per User Configuration",
        "user_content": [
          "`{0}config giftalert <on/off>` - Change whether bot tells you if you've been given items or emeralds.\n\n",
          "`{0}config clearrconpasswords` - Clear your saved remote console passwords from the database.\n\n"
        ]
      },
      "prefix": {
        "this_server": "The prefix in this server is `{}`",
        "error_1": "You cannot have a prefix longer than `{}` characters.",
        "error_2": "`{}` is not allowed to be in a prefix.",
        "set": "Set the server prefix to `{}`"
      },
      "replies": {
        "enabled": "enabled",
        "disabled": "disabled",
        "this_server": "Message replies are **{}**.",
        "set": "Turned message replies **{}**."
      },
      "diff": {
        "this_server": "The server difficulty is currently set to **{}**.",
        "set": "Set the server difficulty to **{}**."
      },
      "lang": {
        "this_server": "The server language is currently set to **{}**.\n\nAvailable languages are: {}",
        "set": "Set the server language to **{}**."
      },
      "mcs": {
        "this_server": "The default Minecraft server is currently set to **`{}`**",
        "error_1": "That is too long, you can't make it more than `{}` characters.",
        "set": "Set the default Minecraft server to **`{}`**"
      },
      "gift": {
        "this_user": "Give/gift alerts are currently **{}**.",
        "set": "Turned give/gift alerts **{}**."
      },
      "cmd": {
        "not_prem": "This feature is not enabled in this server.",
        "list_cmds": "Disabled commands: `{}`",
        "nope": "No disabled commands.",
        "cant": "You can't disable this command.",
        "not_found": "Command not found.",
        "reenable": "Re-enabled command `{}`.",
        "disable": "Disabled command `{}`."
      },
      "rcon": {
        "none": "You didn't have any saved passwords.",
        "one": "Unsaved/deleted 1 password.",
        "multi": "Unsaved/deleted {} passwords."
      }
    },
    "useful": {
      "vote": {
        "click_1": "Click Me!",
        "click_2": "Or Here!"
      },
      "links": {
        "support": "Support Server",
        "invite": "Bot Invite",
        "topgg": "Top.gg Page",
        "website": "Website",
        "source": "Source Code",
        "privacy": "Privacy Policy"
      },
      "stats": {
        "stats": "Villager Bot Statistics",
        "servers": "Server Count",
        "dms": "DM Channel Count",
        "users": "User Count",
        "msgs": "Session Messages",
        "cmds": "Session Commands",
        "cmds_sec": "Commands/Second",
        "votes": "Session Votes",
        "topgg": "Top.gg Votes/Hour",
        "shards": "Shard Count",
        "ping": "Ping",
        "mem": "Memory",
        "cpu": "CPU Usage",
        "threads": "Threads",
        "tasks": "Tasks",
        "uptime": "Uptime"
      },
      "ginf": {
        "info": "Information",
        "age": "Created At",
        "owner": "Owner",
        "members": "Members",
        "bots": "Bots",
        "channels": "Channels",
        "roles": "Roles",
        "roles_and_n_others": "and {n} others...",
        "emojis": "Emojis",
        "bans": "Bans",
        "cmd_prefix": "Prefix",
        "lang": "Language",
        "diff": "Difficulty",
        "joined_at": "Joined"
      },
      "meth": {
        "oops": "Oops, something went wrong..."
      },
      "search": {
        "nope": "No results found...",
        "error": "Oops, something went wrong..."
      },
      "rules": {
        "rules": "Villager Bot Rules",
        "slashrules": "{}rules for the rules!",
        "penalty": "Penalty for breaking these rules may include a reset/wipe, in-game penalty/debuff, or a **permanent ban from the support server and/or using the bot**.",
        "rule_1": "**1.** Don't abuse bugs, report them in the #bug-smasher channel on the [support server]({}) for a reward!",
        "rule_2": "**2.** Don't cheat in any way or use alternate accounts or other users for storing your emeralds or items. (This includes no self-botting.)",
        "rule_3": "**3.** Don't be annoying, toxic, or harrass anyone using the bot's features.",
        "rule_4": "**4.** Don't use the bot to promote any content not sanctioned by the bot owner."
      },
      "remind": {
        "reminder_max": "You cannot have more than {max} reminders at once.",
        "stupid_1": "You used invalid formatting, example: `{0}remindme 1w2d3h4m this is an example` will remind you in one week, two days, three hours, and four minutes.",
        "time_max": "You cannot set a reminder for more than one year in advance.",
        "remind": "{0} reminding you {1}.",
        "reminder": "{0}, you wanted me to remind you: *{1}*",
        "none": "*You have no reminders...*",
        "add": "You can add reminders with {}reminder add <duration> <text>",
        "unauthorized": "{0} that is not your reminder.",
        "authorized": "{0} succesfully deleted your reminder."
      },
      "credits": {
        "credits": "Villager Bot wouldn't be possible without...",
        "foot": "Made by Iapetus11 and others ({0}credits)",
        "people": {
          "iapetus11": "The creator, owner, and developer of Villager Bot",
          "hpancakesk": "Helped come up with the original ideas behind Villager Bot",
          "moody": "Helped with the ideas behind several items and fishing",
          "emulator": "Helped with bug fixes and feature additions",
          "elrynd": "Has helped with bug fixes and code understanding, and translated Villager Bot into French",
          "chez": "Created new features and helps fix bugs",
          "quack": "Helps fix minor issues with the code and translations",
          "zelou": "Helps with the Spanish translation of Villager Bot",
          "joaooh": "Created and maintains the Portuguese translation of Villager Bot",
          "xe": "Minor bug fixes and feature additions",
          "radar": "Minor bug fixes and feature additions",
          "kuro": "Helps with multiple translations of Villager Bot",
          "hilt": "Helps with multiple translations of Villager Bot",
          "infernum": "Miscellaneous bug fixes and feature additions and reminders system improvements",
          "zethal_": "Made several textures"
        },
        "others": "And of course, the countless others who have contributed ideas and bug reports to help make Villager Bot better!"
      },
      "snipe": {
        "nothing": "There's nothing to snipe."
      },
      "redditdl": {
        "invalid_url": "That's an invalid post link!",
        "reddit_error": "Uh oh, something went wrong contacting Reddit",
        "downloading": "{} Downloading video and audio...",
        "stitching": "{} Stitching together video and audio...",
        "couldnt_find": "Couldn't find anything to download... :/"
      },
      "imgcmds": {
        "missing": "You must specify the url of an image or upload one.",
        "invalid": "The specified image is invalid.",
        "too_big": "The specified image is too big (must not exceed {size}).",
        "error": "An error occurred while reading the specified image."
      },
      "exif": {
        "title": "EXIF Data",
        "none": "*No EXIF data found...*",
        "discord": "This command requires a URL, as Discord automatically strips EXIF data from media."
      },
      "translate": {
        "stupid_1": "You must either send text to translate or reply to a message to translate.",
        "stupid_2": "The message replied to must have text to translate.",
        "stupid_3": "Unknown or invalid target language, only these are supported: {lang_codes}",
        "error": "Failed to translate text."
      }
    },
    "econ": {
      "use_a_number_stupid": "You have to use a number.",
      "page": "Page",
      "bot_prevention": {
        "problem": "Please type the letters below to continue:",
        "timeout": "You ran out of time, what a slowpoke...",
        "correct": "{} Correct answer!",
        "incorrect": "{} Incorrect answer!"
      },
      "pp": {
        "bot_1": "Hey dumb dumb, Villager Bot has wayyy to much stuff to show here.",
        "bot_2": "Hey dumb dumb, bots don't have rights and therefore can't have items or emeralds.",
        "total_wealth": "Net Wealth",
        "mooderalds": "Mooderalds",
        "pick": "Pickaxe",
        "sword": "Sword",
        "streak": "Vote Streak",
        "can_vote": "Can Vote?",
        "yep": "Yep!",
        "fx": "Active Effects"
      },
      "bal": {
        "bot_1": "Villager Bot has wayyyyy too many emeralds to show!",
        "bot_2": "Bots don't have rights and can't have emeralds or stuff.",
        "s_emeralds": "{}'s emeralds",
        "total_wealth": "Net Wealth: {}{}",
        "autistic_emeralds": "Mooderalds: {}{}",
        "pocket": "Pocket",
        "vault": "Vault"
      },
      "inv": {
        "bot_1": "Villager Bot has wayyyyy too many items to show (About 100000000000000000)",
        "bot_2": "Bots don't have rights and therefore can't have emeralds or stuff.",
        "s_inventory": "{}'s inventory [{}]",
        "cats": {
          "tools": "tools",
          "magic": "magic",
          "fish": "fish",
          "misc": "misc",
          "farming": "farming",
          "all": "all"
        },
        "empty": "*It's quite empty in here...*"
      },
      "dep": {
        "poor_loser": "You don't have enough emeralds to deposit.",
        "stupid_1": "You can't deposit less than one emerald block.",
        "stupid_2": "You don't have enough space for that.",
        "stupid_3": "You can't deposit more emeralds than you have.",
        "deposited": "Deposited {}{} ({}{}) into your vault."
      },
      "withd": {
        "poor_loser": "You don't have enough emerald blocks to withdraw.",
        "stupid_1": "You can't withdraw less than one emerald block.",
        "stupid_2": "You can't withdraw more than you have.",
        "withdrew": "Withdrew {}{} ({}{}) from your vault."
      },
      "shop": {
        "villager_shop": "Villager Shop",
        "tools": "{} Tools",
        "magic": "{} Magic",
        "farming": "{} Farming",
        "other": "{} Other",
        "embed_footer": "Use {}inventory to see what you have!"
      },
      "buy": {
        "poor_loser_1": "You don't have enough emeralds to buy any of this item.",
        "stupid_1": "You can't buy less than one of an item.",
        "stupid_2": "`{}` is invalid or isn't in the Villager Shop.",
        "poor_loser_2": "You don't have enough emeralds to buy `{}x` **{}**.",
        "need_total_of": "You need a total of `{}x` {} ({}) to buy this item.",
        "you_done_bought": "You have bought {}x **{}** for {} (You have {} total).",
        "no_to_item_1": "You can't buy any more of this item.",
        "no_to_item_2": "For some reason, you can't buy this item."
      },
      "sell": {
        "invalid_item": "Either that item is invalid or you don't have it.",
        "stupid_1": "You can't sell more than you have of that item.",
        "stupid_2": "You can't sell less than one of an item.",
        "stupid_3": "You can't sell this item.",
        "you_done_sold": "You have sold {}x **{}** for a total of {}{}"
      },
      "give": {
        "bot_1": "Villager Bot already has a full inventory (About 100000000000000000 unique items!)",
        "bot_2": "You can't give stuff to bots as they don't have rights and can't have emeralds or stuff.",
        "stupid_1": "You can't give stuff to yourself!",
        "stupid_2": "You can't give someone less than one of something.",
        "and_i_oop": "You can't trade/gift this item.",
        "stupid_3": "You can't give someone more emeralds than you have.",
        "stupid_4": "You can't give more of an item than you have.",
        "gave": "{} gave {}x **{}** to {}",
        "gaveems": "{} gave {}{} to {}",
        "gaveyou": "{} gave you {}x **{}**",
        "gaveyouems": "{} gave you {}{}"
      },
      "gamble": {
        "stupid_1": "You can't gamble more emeralds than you have.",
        "stupid_2": "You have to gamble 10 or more emeralds at a time.",
        "stupid_3": "You can't gamble more than 50000 emeralds at a time.",
        "too_rich": "You have too much emeralds, go do something else with your life!",
        "roll": "Your roll: `{}` **|** Bot's roll: `{}`",
        "win": "You won! Villager Bot {} {}{}",
        "lose": "You lost {}{} to Villager Bot...",
        "tie": "Tie! Maybe Villager Bot will steal your emeralds anyways...",
        "actions": [
          "forks over",
          "gives you",
          "hands over",
          "passes you"
        ]
      },
      "beg": {
        "positive": [
          "A piglin tosses away {}, as only gold matters to it.",
          "You find {} dropped by pillagers after a raid.",
          "You find {} left by pillagers in the remnants of a destroyed village...",
          "A villager takes pity on you and drops {} on the ground.",
          "A traveller takes pity on you and drops {} into your hands.",
          "You mug a beggar and get {}!",
          "Out of annoyance, the villagers throw emeralds at you to make you go away, you picked up {}.",
          "Villager Bot's kindness blesses you, {} appears in your pocket.",
          "While traveling to a village, you come across a chunk error, with exposed emeralds at the bottom. You mined up {}.",
          "As a raid comes to an end the villagers mistake you for the hero, you receive {}.",
          "You gave the piglin a great time. The piglin stops and thinks, and then hands you {}.",
          "hurrhhrrrhmmhrrrhehhhshrmhmrgghm, Villager Bot gave you {}.",
          "hhrrrhhrmhmmhhrrrhmmhrrrhehhhhmehehhrrrhshrmhmrgghm, Villager Bot gave you {}.",
          "Walking towards your begging spot, glistening emeralds catch your eye. You find {}.",
          "You search between the couch cushions and find {}!",
          "You climb Mt. Everest in search of emeralds, you find {}!",
          "You find a hidden trapdoor and behind it lays {}...",
          "In a dusty corner you spot {}.",
          "While cleaning your room you find {}, perhaps you should do it more often...",
          "Underneath a block of dirt you find {}!",
          "You search your pockets and find {}, covered in old sticky gum...",
          "Your pet barfs up {}...",
          "Scrolling to the bottom of the channel list on Discord you find {}!",
          "You search the [Discord server](https://discord.com/invite/39DwwUV) and find {}...",
          "You search for {} on Google."
        ],
        "negative": [
          "A band of piglins doesn't take your interruption lightly and steals {} from you.",
          "You stumble across a group of pillagers which steal {} from you.",
          "You get hit in the head with some bread as villagers chase you out of the village. You dropped {} while you ran away.",
          "Another begger mugs you and steals {}.",
          "Asking a creeper didn't go so well, you lost {} from the resulting explosion.",
          "While looking for more emeralds, you misplaced yours, losing {}.",
          "An illusioner appears, rambling about doubling emeralds with this once simple trick. You hand him {} and he disappears in a puff of smoke.",
          "While begging in a village you got caught up in a raid, a ravager headbutts you across the map. You drop {} mid-flight."
        ],
        "mooderald": [
          "You were blessed by Moofy, and magically received {}.",
          "You prayed for Mooderalds, and found {} in your left pocket.",
          "You found {} inside your bag with a note."
        ]
      },
      "mine": {
        "found_item_1": "You {0} {1} **{2}** (Worth {3}{4}) {5}.",
        "found_item_2": "You {0} {1} {2} {3}.",
        "found_emeralds": "You {0} {1}{2}!",
        "actions": [
          "mined up",
          "found",
          "got",
          "dug up"
        ],
        "places": [
          "in an abandoned mineshaft",
          "in a chest while mining",
          "in a chest",
          "in an abandoned chest",
          "in a chest near a monster spawner",
          "while mining"
        ],
        "useless": [
          "useless",
          "stupid",
          "dumb",
          "worthless"
        ]
      },
      "fishing": {
        "stupid_1": "You can't fish without a fishing rod stupid.",
        "cast": [
          "You cast your rod out...",
          "You attempt to lure a fish...",
          "You go fishing..."
        ],
        "junk": [
          "You fished up hopes and dreams, unfortunately that's not profitable...",
          "You reeled in a meme, you can't sell it though...",
          "You reeled in disappointment..."
        ],
        "item": [
          "You fished up 1x **{0}**! (Worth {1}{2})",
          "You reeled in 1x **{0}**! (Worth {1}{2})"
        ],
        "caught": [
          "You reeled in one **{0}** {1}!",
          "You fished up one **{0}** {1}!",
          "You feel a bite and reel in one **{0}** {1}!",
          "You feel a tug at the end of the line and fish up one **{0}** {1}!"
        ],
        "market": {
          "title": "{} __Villager Bot Fish Market__ {}",
          "desc": "The prices at which different fish sell for, you can buy a\nfishing rod in the tools section of the shop.",
          "current": "Sells For: {0}{1}"
        }
      },
      "pillage": {
        "bot_1": "Hey dumb dumb, Villager Bot cannot be defeated. Villager Bot is immortal and all powerful.",
        "bot_2": "You can't pillage bots as they don't have rights and therefore can't have emeralds.",
        "stupid_1": "You can't pillage yourself, dummy.",
        "stupid_2": "You can't pillage people from other servers...",
        "stupid_3": "You can only pillage people if you have more than 64{}",
        "stupid_4": "You can only pillage a person if they have more than 64{}",
        "stupid_5": "You can't pillage a person who has a **Shield Pearl** active.",
        "u_win": {
          "user": [
            "You escaped with {}{}",
            "You got away with {}{}",
            "You pillaged and stole {}{}"
          ],
          "victim": [
            "{} stole {}{} from you...",
            "{} pillaged {}{} from you...",
            "{} pillaged you and stole {}{}...",
            "{} pillaged you and got {}{}..."
          ]
        },
        "u_lose": {
          "user": [
            "You got caught while pillaging and paid {}{}",
            "You got caught and had to pay {}{}",
            "You dirty thief, you got caught and had to pay {}{}"
          ],
          "victim": [
            "{} absolutely failed at pillaging you!",
            "{} got absolutely destroyed at pillaging you!",
            "{} failed while trying to pillage you with their wooden sword!",
            "{} tried to pillage you with their wooden sword!"
          ]
        }
      },
      "use": {
        "stupid_1": "You can't use more than one of this item at once.",
        "stupid_2": "You can't use an item you don't even have.",
        "stupid_3": "You can't use less than one of an item at once, stupid.",
        "stupid_4": "You can't use more than 100 items at once.",
        "stupid_5": "You can't use more items than you have!",
        "stupid_6": "Either that isn't a usable item, or it doesn't exist.",
        "vault_max": "You cannot expand your vault further via this method.",
        "vault_pot": "You've chugged a **Vault Potion**. Your vault space has increased by {} spaces.",
        "smoke_seaweed": "You've eaten some **Seaweed** which lasts **{} minutes**",
        "use_bonemeal": "You've used some **Bone Meal** on your crops, making them grow!",
        "seaweed_done": "The **Seaweed** you ate earlier has worn off.",
        "chug": "You've chugged a **{}** which lasts **{} minutes**.",
        "chug_no_end": "You've chugged a **{}**!",
        "chug_honey": "You've chugged {0}x **Honey Jar**! (You now have {1}/20 {2})",
        "cant_use_any": "You can't use any **{}** right now.",
        "cant_use_up_to": "You can't use any more than {0} **{1}** right now.",
        "done": "The **{}** you chugged earlier has worn off.",
        "need_slimy_balls": "You need one **Slime Ball** for each **Glass Beaker**.",
        "slimy_balls_funne": "You've converted {0}x **Slime Ball** + {0}x **Glass Beaker** into {0}x **Beaker Of Slime**!",
        "beaker_of_slime_undo": "You've converted {0}x **Beaker Of Slime** into {0}x **Slime Ball**!",
        "use_shield_pearl": "You've used a **Shield Pearl** and are now invincible against pillagers for the next month.",
        "use_time_pearl": "You've used a **Time Pearl** which has skipped time forwards two days.",
        "present": [
          "You opened your present and found 1x **{}** (Worth {}{})!",
          "You tore off the wrapping paper as fast as you could and got 1x **{}** (Worth {}{})!",
          "You rip open the present box and find 1x **{}** (Worth {}{})!",
          "You yeet the box out of the window, it breaks open and you get 1x **{}** (Worth {}{})!"
        ],
        "barrel_item": [
          "You popped the lid of the barrel and found 1x **{}** (Worth {}{})!",
          "You yeeted the barrel out the window, and it breaks open revealing 1x **{}** (Worth {}{})!",
          "You kick the barrel and it opens, revealing 1x **{}** (Worth {}{})!",
          "You open the barrel and find 1x **{}** (Worth {}{})!",
          "You open the barrel to find 1x **{}** (Worth {}{})!",
          "You hack the barrel open with an axe to find 1x **{}** (Worth {}{})!",
          "You throw emeralds at the barrel till it breaks open to reveal 1x **{}** (Worth {}{})!",
          "You enlist the help of some pillagers to open the barrel containing 1x **{}** (Worth {}{})!",
          "Yoinks scoob looks like you found 1x **{}** (Worth {}{}) in the barrel!"
        ],
        "barrel_ems": [
          "You popped the lid of the barrel and found {}{}!",
          "You yeeted the barrel out the window, and it breaks open revealing {}{}!",
          "You kick the barrel and it opens, revealing {}{}!",
          "You open the barrel and find {}{}!",
          "You open the barrel to find {}{}!",
          "You hack the barrel open with an axe to find {}{}!",
          "You enlist the help of some pillagers to open the barrel containing {}{}!"
        ],
        "open_item_box": [
          "You opened the **Item Box** and found 1x **{item}** (Worth {sell_price}{emerald})!",
          "You ripped open the **Item Box** and found 1x **{item}** (Worth {sell_price}{emerald})!"
        ]
      },
      "farm": {
        "s_farm": "{user}'s Farm",
        "commands_title": "Farm Commands",
        "commands": {
          "plant": "`{prefix}farm plant` - plants the item",
          "harvest": "`{prefix}farm harvest` - harvests all ready crops"
        },
        "available": "Available to harvest: {available}/{max}",
        "cant_plant": "You can't plant this item.",
        "no_plots": "All your farm plots are full, a better hoe will give you more!",
        "no_plots_2": "You don't have enough farm plots for that!",
        "planted": "Planted {amount}x {crop}",
        "cant_harvest": "There are no ready crops to harvest...",
        "harvested": "Harvested {crops}"
      },
      "honey": {
        "stupid_1": [
          "You don't have enough bees to make this business option viable.",
          "You need 100 jars of bees to actually make a profit, go away."
        ],
        "honey": [
          "Apparently bees produce honey and you just collected {} jars of it! Who knew?!!",
          "So, bees make honey and you just got {} jars of it!",
          "Wow, bees make honey! You just got {} jars of it!"
        ],
        "ded": [
          "Also, apparently bees get pretty pissed when you try and steal their honey. You lost {} of em...",
          "Oops, apparently bees get pretty mad when you try and steal from them, who knew!? You lost {} of them to suicide.",
          "Looks like bees get pretty angry when you try and steal from them, you lost {} to suicide..."
        ]
      },
      "lb": {
        "title": "__**Villager Bot Leaderboards**__",
        "global_lb": "Global",
        "local_lb": "This Server",
        "emeralds": "Emeralds",
        "item": "Item",
        "unique_items": "Unique Items",
        "stolen": "Emeralds Stolen",
        "kills": "Mobs Killed",
        "cmds": "Commands Sent",
        "votes": "Vote Streak",
        "fish": "Fishies Fished",
        "farming": "Crops Planted",
        "trash": "Trash Emptied",
        "wems": "Weekly Emeralds",
        "wcmds": "Weekly Commands",
        "lb_ems": "{0}__**Emerald Leaderboard**__{0}",
        "lb_item": "{0}__**{1} Leaderboard**__{0}",
        "lb_unique_items": "{0}__**Unique Items Leaderboard**__{0}",
        "lb_pil": "{0}__**Emeralds Stolen Leaderboard**__{0}",
        "lb_kil": "{0}__**Mobs Killed Leaderboard**__{0}",
        "lb_cmds": "{0}__**Commands Sent Leaderboard**__{0}",
        "lb_votes": "{0}__**Vote Streak Leaderboard**__{0}",
        "lb_fish": "{0}__**Fish Fished Leaderboard**__{0}",
        "lb_farming": "{0}__**Crops Planted Leaderboard**__{0}",
        "lb_trash": "{0}__**Trash Emptied Leaderboard**__{0}",
        "lb_wems": "{0}__**Weekly Emeralds**__{0}",
        "lb_wcmds": "{0}__**Weekly Commands**__{0}",
        "no_item_lb": "No leaderboard exists for this item",
        "item_lb_stats": "*total of {total_count:,} owned by {user_count:,} different users*"
      },
      "trash": {
        "s_trash": "{user}'s Trash Can",
        "no_trash": "There's no trash here... :/",
        "total_contents": "The total contents is worth {ems}{ems_emoji}",
        "how_to_empty": "Use `{prefix}trashcan empty` to empty the trash!",
        "emptied_for": "You emptied your trash can for {ems}{ems_emoji}"
      }
    }
  }
}
